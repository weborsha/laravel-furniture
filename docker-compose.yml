services:
  php:
    build:
      dockerfile: ./docker/php/Dockerfile
    container_name: php
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    env_file:
      - ./backend/.env
    networks:
      - furniture

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3316:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - furniture

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - furniture

  composer:
    image: composer:latest
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    networks:
      - furniture

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - furniture

  vue:
    image: node:lts-alpine
    container_name: vue
    working_dir: /app
    volumes:
      - ./frontend:/app
    #command: sh -c "npm install && npm run serve -- --port 8082"
    ports:
      - "8082:8080"
    networks:
      - furniture

volumes:
  mysql_data:

networks:
  furniture:
    driver: bridge
